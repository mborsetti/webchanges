"""
Configuration file for the Sphinx documentation builder.

This file only contains a selection of the most common options. For a full
list see the documentation:
https://www.sphinx-doc.org/en/master/usage/configuration.html
"""

from __future__ import annotations

import sys
from pathlib import Path
from typing import Any

import sphinx.application

# below required for local build
import sphinx_rtd_theme  # noqa: F401 'sphinx_rtd_theme' imported but unused.
from docutils import nodes
from sphinx.writers.html5 import HTML5Translator

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#

# below required to import project_data module
sys.path.insert(1, str(Path(__file__).parent.parent))
import webchanges as project_data  # noqa: E402 module level import not at top of file.

# below required to import inheritance_ascii_tree module
sys.path.insert(1, str(Path(__file__).parent))

# below required for autosummary build on GitHub Actions's pre-commit and on readthedocs.io
sys.path.insert(1, str(Path(__file__).parent.joinpath('webchanges')))


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
needs_sphinx = '7.2.6'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
#
extensions = [
    'inheritance_ascii_tree',
    # 'sphinx.ext.intersphinx',
    'sphinx.ext.autodoc',
    'sphinx.ext.autosummary',
    # 'sphinx.ext.doctest',
    # 'sphinx.ext.mathjax',
    'sphinx.ext.todo',
    # 'sphinx.ext.viewcode',
    # 'sphinxcontrib.httpdomain',
    'sphinx_rtd_theme',
]

# Add any paths that contain templates here, relative to this directory.
#
# templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify a dictionary mapping file extensions to file types.
#
# source_suffix = {'.rst': 'restructuredtext'}  # default

# The encoding of source files.
#
# source_encoding = 'utf-8-sig'

# The main toctree document.
#
# root_doc = 'index'  # default

# General information about the project.
project = project_data.__package__
copyright = project_data.__copyright__.removeprefix('Copyright ')
author = project_data.__author__

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = project_data.__version__
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#
# today = ''
#
# Else, today_fmt is used as the format for a strftime call.
#
# today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']


# The reST default role (used for this markup: `text`) to use for all
# documents.
#
# default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#
# add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#
# add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#
# show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
# modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
# keep_warnings = False

# If true, `to_do` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages. See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'  # default
html_theme = 'sphinx_rtd_theme'

# Custom style (imports regular style and adding new ones)
#
# See https://docs.readthedocs.io/en/stable/guides/adding-custom-css.html#overriding-or-replacing-a-theme-s-stylesheet
#
html_style = 'css/webchanges.css'

# Theme options are theme-specific and customize the look and feel of a theme
# further. For a list of options available for each theme, see the
# documentation.
#
# See https://sphinx-rtd-theme.readthedocs.io/en/latest/configuring.html
#
html_theme_options: dict[str, Any] = {
    # 'canonical_url': '',
    # 'analytics_id': 'UA-XXXXXXX-1',  #  Provided by Google in your dashboard
    # 'analytics_anonymize_ip': False
    # 'logo_only': False,
    # 'display_version': True,
    # 'prev_next_buttons_location': 'bottom',
    # 'style_external_links': False,
    # 'vcs_pageview_mode': '',
    # 'style_nav_header_background': '#2980B9',
    # Toc options
    # 'collapse_navigation': True,
    # 'sticky_navigation': True,
    # 'navigation_depth': 4,
    # 'includehidden': True,
    # 'titles_only': False
}

# Add any paths that contain custom themes here, relative to this directory.
# html_theme_path = []

# The name for this set of Sphinx documents.
# "<project> v<release> documentation" by default.
#
# html_title = 'test vtest'

# A shorter title for the navigation bar. Default is the same as html_title.
#
# html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#
# html_logo = None

# The name of an image file (relative to this directory) to use as a favicon of
# the docs. This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#
# html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#
# html_extra_path = []

# If not None, a 'Last updated on:' timestamp is inserted at every page
# bottom, using the given strftime format.
# The empty string is equivalent to '%b %d, %Y'.
#
# html_last_updated_fmt = None

# Custom sidebar templates, maps document names to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself. Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#
# html_additional_pages = {}

# If false, no module index is generated.
#
# html_domain_indices = True

# If false, no index is generated.
#
# html_use_index = True

# If true, the index is split into individual pages for each letter.
#
# html_split_index = False

# If true, links to the reST sources are added to the pages.
#
# html_show_sourcelink = True

# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#
# html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#
# html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it. The value of this option must be the
# base URL from which the finished HTML is served.
#
# html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
# html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr', 'zh'
#
# html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# 'ja' uses this config value.
# 'zh' user can custom change `jieba` dictionary path.
#
# html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#
# html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'testdoc'


# The “title” for HTML documentation generated with Sphinx’s own templates.
#
# html_title = '<project> v<revision> documentation'  # default


# Name of image file that is the logo of the docs, or URL that points to same.
# Width not to exceed 200 pixels.
#
# html_logo = None  # default


# Name of a Windows-style icon file (.ico) that is the favicon of the docs, or
# URL that points to same.
#
# html_favicon = None  # default

# A ‘Last updated on:’ timestamp is inserted at every page bottom, using the
#  given strftime() format. The empty # string is equivalent to '%b %d, %Y'
#  (or a locale-dependent equivalent).
#
html_last_updated_fmt = ''

# Include reST sources in the HTML build as _sources/name. The default is True
#
html_copy_source = False


# -- Options for the Python domain -------------------------------------------

# Set to True to suppress the module name of the python reference if it can be
# resolved.
#
python_use_unqualified_type_names = True


# -- sphinx.ext.autodoc configuration ----------------------------------------

# See https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#configuration

autoclass_content = 'both'
autodoc_member_order = 'groupwise'
# See https://www.sphinx-doc.org/en/master/usage/extensions/autodoc.html#directives
autodoc_default_options = {
    'members': True,
    'member-order': 'bysource',  # 'alphabetical' (def), 'groupwise' or 'bysource'
    'undoc-members': True,
    # 'private-members': False,  # default
    # 'special-members': False,  # default
    'inherited-members': True,
    'show-inheritance': True,
    # 'ignore-module-all': False,  # default
    # 'imported-members': False, # default
    # 'exclude-members': '',  # default
    # 'class-doc-from': '',  # default
}
# autodoc_docstring_signature = True  # default
# autodoc_mock_imports = []  # default
autodoc_typehints = 'description'
# autodoc_typehints_description_target = 'all'  # default
# autodoc_type_aliases = {}  # default
# autodoc_warningiserror = True  # default
# autodoc_inherit_docstrings = True  # default

# https://stackoverflow.com/questions/2701998
autosummary_generate = True


# -- Patch to open external links in new tab ---------------------------------

# see https://stackoverflow.com/a/61669375/3159288

# code below from version 4.0.0 at
# https://github.com/sphinx-doc/sphinx/blob/master/sphinx/writers/html5.py


class PatchedHTMLTranslator(HTML5Translator):
    """Adds open-in-new-tab support.
    See https://stackoverflow.com/questions/25583581.
    """

    def unknown_visit(self, node: nodes.Node) -> None:
        pass

    def visit_reference(self, node: nodes.Element) -> None:
        atts = {'class': 'reference'}
        if node.get('internal') or 'refuri' not in node:
            atts['class'] += ' internal'
        else:
            atts['class'] += ' external'
            # ---------------------------------------------------------
            # Customize behavior (open in new tab, secure linking site)
            atts['target'] = '_blank'
            atts['rel'] = 'noopener noreferrer'
            # ---------------------------------------------------------
        if 'refuri' in node:
            atts['href'] = node['refuri'] or '#'
            if self.settings.cloak_email_addresses and atts['href'].startswith('mailto:'):
                atts['href'] = self.cloak_mailto(atts['href'])
                self.in_mailto = True
        else:
            assert 'refid' in node, 'References must have "refuri" or "refid" attribute.'
            atts['href'] = '#' + node['refid']
        if not isinstance(node.parent, nodes.TextElement):
            assert len(node) == 1 and isinstance(node[0], nodes.image)
            atts['class'] += ' image-reference'
        if 'reftitle' in node:
            atts['title'] = node['reftitle']
        if 'target' in node:
            atts['target'] = node['target']
        self.body.append(self.starttag(node, 'a', '', **atts))

        if node.get('secnumber'):
            self.body.append(('%s' + self.secnumber_suffix) % '.'.join(map(str, node['secnumber'])))


def setup(app: sphinx.application.Sphinx) -> None:
    app.set_translator('html', PatchedHTMLTranslator)
